{"version":3,"sources":["components/Profile/Profile.module.scss","components/Statistics/Statistics.module.scss","components/FriendListItem/FriendListItem.module.scss","components/FriendsList/FriendList.module.scss","components/Transactions/TransactionHistory.module.scss","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendsList/FriendList.jsx","components/Transactions/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Stats","stats","className","s","label","quantity","followers","views","likes","Profile","name","tag","location","avatar","profile","StatsItem","fileType","percentage","item","data","statList","map","stat","id","Statistics","title","statistics","defaultProps","FriendListItem","isOnline","status","online","src","alt","width","FriendList","friends","friendList","friend","Transaction","type","amount","currency","TransactionsHisory","transactionHistory","transaction","App","user","statsData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6485c08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__iWJR-\",\"avatar\":\"Profile_avatar__hCmyd\",\"name\":\"Profile_name__a-wTd\",\"description\":\"Profile_description__O6ik_\",\"tag\":\"Profile_tag__qEkAI\",\"stats\":\"Profile_stats__2_Nn3\",\"label\":\"Profile_label__N-z4Z\",\"quantity\":\"Profile_quantity__U-zL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2V5a8\",\"title\":\"Statistics_title__33CA9\",\"statList\":\"Statistics_statList__31vlp\",\"item\":\"Statistics_item__2Rxf-\",\"percentage\":\"Statistics_percentage__2rIvK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1-9Ky\",\"status\":\"FriendListItem_status__3AslV\",\"online\":\"FriendListItem_online__38DZA\",\"avatar\":\"FriendListItem_avatar__1cTgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2Xj5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3ViEy\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Profile.module.scss\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={s.profile}>\r\n    <Profile name={name} tag={tag} location={location} avatar={avatar} />\r\n    <Stats stats={stats} />\r\n  </div>\r\n);\r\n\r\nconst Stats = ({ stats }) => (\r\n  <ul className={s.stats}>\r\n    <li>\r\n      <span className={s.label}>Followers</span>\r\n      <span className={s.quantity}>{stats.followers}</span>\r\n    </li>\r\n    <li>\r\n      <span className={s.label}>Views</span>\r\n      <span className={s.quantity}>{stats.views}</span>\r\n    </li>\r\n    <li>\r\n      <span className={s.label}>Likes</span>\r\n      <span className={s.quantity}>{stats.likes}</span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStats.propTypes = {\r\n  followers: PropTypes.number,\r\n  views: PropTypes.number,\r\n  likes: PropTypes.number,\r\n};\r\n\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.scss\";\r\n\r\nconst StatsItem = ({ fileType, percentage }) => (\r\n  <li className={s.item}>\r\n    <span className={s.label}>{fileType}</span>\r\n    <span className={s.percentage}>{percentage}%</span>\r\n  </li>\r\n);\r\n\r\nStatsItem.propTypes = {\r\n  fileType: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nconst Stats = ({ data }) => (\r\n  <ul className={s.statList}>\r\n    {data.map((stat) => (\r\n      <StatsItem\r\n        key={stat.id}\r\n        fileType={stat.label}\r\n        percentage={stat.percentage}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst Statistics = ({ title, data }) => (\r\n  <section className={s.statistics}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    <Stats data={data} />\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: \"\",\r\n};\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FriendListItem.module.scss\";\r\n\r\nconst FriendListItem = ({ id, avatar, name, isOnline }) => (\r\n    <li key={id} className={s.item}>\r\n    <span\r\n      className={isOnline ? s.status + ` ${s.online}` : s.status}\r\n    ></span>\r\n    <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n    <p className={s.name}>{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool,\r\n};\r\n\r\nFriendListItem.defaultProps = {\r\n  isOnline: false,\r\n};\r\n\r\nexport default FriendListItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./FriendList.module.scss\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={s.friendList}>\r\n    {friends.map((friend) => (\r\n      <FriendListItem key={friend.id} {...friend} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FriendList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./TransactionHistory.module.scss\";\r\n\r\nconst Transaction = ({ type, amount, currency }) => (\r\n  <tr>\r\n    <td>{type}</td>\r\n    <td>{amount}</td>\r\n    <td>{currency}</td>\r\n  </tr>\r\n);\r\n\r\nTransaction.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nconst TransactionsHisory = ({ data }) => (\r\n  <table className={s.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {data.map((transaction) => (\r\n        <Transaction key={transaction.id} {...transaction} />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionsHisory.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TransactionsHisory;","import Profile from \"./components/Profile/Profile\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport user from \"./data/user.json\";\r\nimport statsData from \"./data/statistical-data.json\";\r\nimport FriendList from \"./components/FriendsList/FriendList\";\r\nimport friendList from \"./data/friends.json\";\r\nimport TransactionsHisory from \"./components/Transactions/TransactionHistory\";\r\nimport transactions from \"./data/transactions.json\";\r\n\r\nconst App = () => (\r\n  <div className=\"container\">\r\n    <Profile {...user} />\r\n    <Statistics title=\"Your Filetypes Stats\" data={statsData} />\r\n    <FriendList friends={friendList} />\r\n    <TransactionsHisory data={transactions} />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}